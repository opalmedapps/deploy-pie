services:
  traefik:
    image: traefik:v3.3.5
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - APP_HOST=${APP_HOST}
      - AUTH_LABS_USERNAME=${AUTH_LABS_USERNAME}
      - AUTH_LABS_PASSWORD=${AUTH_LABS_PASSWORD}
    volumes:
      - type: bind
        source: $PWD/config/traefik/traefik.yaml
        target: /etc/traefik/traefik.yaml
        read_only: true
      - type: bind
        source: $PWD/config/traefik/dynamic-config
        target: /config
        read_only: true
      - type: bind
        source: $PWD/artifacts/logs/traefik
        target: /logs
      {% if certificate_type == "letsencrypt" -%}
      - type: bind
        source: $PWD/config/traefik/certs
        target: /certs
      {% endif -%}
      {% if certificate_type == "file" -%}
      - type: bind
        source: $PWD/certs/server.crt
        target: /certs/server.crt
        read_only: true
      - type: bind
        source: $PWD/certs/server.key
        target: /certs/server.key
        read_only: true
      {% endif -%}
  {%- if db_host_type == "container" %}
  db:
    image: mariadb:10.11.11-jammy
    restart: unless-stopped
    environment:
      - MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      # - MARIADB_USER=${DB_USER}
      # - MARIADB_PASSWORD=${DB_PASSWORD}
      # - MARIADB_DATABASE=${DB_NAME}
      - TZ=${TIMEZONE}
    volumes:
      - db-data:/var/lib/mysql
  {%- endif %}
  opaladmin:
    image: registry.gitlab.com/opalmedapps/opaladmin:latest
    restart: unless-stopped
    {% if db_host_type == "container" -%}
    depends_on:
      - db
    {%- endif %}
    env_file:
      - $PWD/.envs/opaladmin.env
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - type: bind
        source: {{ clinical_notes_path }}
        target: ${CLINICAL_REPORTS_PATH}
      - type: bind
        source: $PWD/config/firebase/service-account.json
        target: /config/firebase-service-account.json
        read_only: true
      - type: bind
        source: $PWD/artifacts/logs/opaladmin
        target: /var/www/html/publisher/logs
      - type: bind
        source: $PWD/certs/apn.crt
        target: /var/www/html/publisher/php/certificates/apn.crt
        read_only: true
      - type: bind
        source: $PWD/certs/apn.key
        target: /var/www/html/publisher/php/certificates/apn.key
        read_only: true
      {% if use_custom_certs -%}
      - type: bind
        source: $PWD/certs/ca-certificates.crt
        target: /etc/ssl/certs/ca-certificates.crt
        read_only: true
      - type: bind
        source: $PWD/certs/db-certs.crt
        target: /certs/db-certs.crt
        read_only: true
      {%- endif %}
  backend:
    image: registry.gitlab.com/opalmedapps/backend:latest
    restart: unless-stopped
    {% if db_host_type == "container" -%}
    depends_on:
      - db
    {%- endif %}
    env_file:
      $PWD/.envs/backend.env
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - backend-media:/app/opal/media
      - backend-logs:/logs
      - type: bind
        source: {{ clinical_notes_path }}
        target: ${CLINICAL_REPORTS_PATH}
      {% if use_custom_certs -%}
      - type: bind
        source: $PWD/certs/ca-certificates.crt
        target: /etc/ssl/certs/ca-certificates.crt
        read_only: true
      - type: bind
        source: $PWD/certs/db-certs.crt
        target: /certs/db-certs.crt
        read_only: true
      {%- endif %}
  backend-media:
    image: joseluisq/static-web-server:2.36.0
    restart: unless-stopped
    depends_on:
      - backend
    volumes:
      - backend-media:/public/media:ro
  listener:
    image: registry.gitlab.com/opalmedapps/opal-listener:latest
    restart: unless-stopped
    {% if db_host_type == "container" -%}
    depends_on:
      - db
    {%- endif %}
    env_file:
      - $PWD/.envs/listener.env
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - type: bind
        source: {{ clinical_notes_path }}
        target: ${CLINICAL_REPORTS_PATH}
        read_only: true
      - type: bind
        source: $PWD/config/firebase/service-account.json
        target: /config/firebase-service-account.json
        read_only: true
      {% if use_custom_certs -%}
      - type: bind
        source: $PWD/certs/ca-certificates.crt
        target: /etc/ssl/certs/ca-certificates.crt
        read_only: true
      - type: bind
        source: $PWD/certs/db-certs.crt
        target: /certs/db-certs.crt
        read_only: true
      {%- endif %}
  redis:
    image: redis:7.4.1-alpine3.20
    restart: unless-stopped
  labs:
    image: registry.gitlab.com/opalmedapps/opal-labs:latest
    restart: unless-stopped
    depends_on:
      - redis
      {% if db_host_type == "container" -%}
      - db
      {%- endif %}
    env_file:
      - $PWD/.envs/labs.env
    environment:
      - TZ=${TIMEZONE}
    {% if use_custom_certs -%}
    volumes:
      - type: bind
        source: $PWD/certs/ca-certificates.crt
        target: /etc/ssl/certs/ca-certificates.crt
        read_only: true
      - type: bind
        source: $PWD/certs/db-certs.crt
        target: /certs/db-certs.crt
        read_only: true
    {%- endif %}
  alembic:
    image: registry.gitlab.com/opalmedapps/db-docker/alembic:latest
    {% if db_host_type == "container" -%}
    depends_on:
      - db
    {%- endif %}
    environment:
      - TZ=${TIMEZONE}
    env_file:
      - $PWD/.envs/alembic.env
    {% if use_custom_certs -%}
    volumes:
      - type: bind
        source: $PWD/certs/db-certs.crt
        target: /certs/db-certs.crt
        read_only: true
    {%- endif %}

volumes:
  db-data:
  backend-media:
  backend-logs:

networks:
  default:
    name: opal-${ENVIRONMENT}
